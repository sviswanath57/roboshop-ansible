- name: shipping
  hosts: shipping
  become: yes
  tasks:
    - name: Enable nodejs 18
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
    
    - name: Install NodeJS
      ansible.builtin.dnf:
        name: nodejs
        state: present
    
    - name: user add
      ansible.builtin.user:
        name: roboshop

    - name: Create app directory
      ansible.builtin.file:
        path: /app
        state: directory
    
    - name: Download shipping directory files
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp
    
    # - name: This command will change the working directory to app/
    #   ansible.builtin.shell:
    #   args:
    #     chdir: /app

    - name: Unarchive/Unzip a file that is already on the shipping/remote machine
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    # - name: download/install the dependencies
    #   ansible.builtin.package:
    #     name: npm
    #     state: present

    - name: mvn package
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: rename packge
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app
    
    - name: setup/copy shipping service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service



    - name: reload the shipping daemon
      ansible.builtin.systemd_service:
        daemon_reload: true
        name: shipping

    - name: mysql install
      ansible.builtin.dnf:
        name: mysql
        state: present

    - name: schema exist or not
      ansible.builtin.command: mysql -h 35.174.15.123 -sN -uroot -pRoboShop@1 -e "SELECT COUNT(*) FROM information_schema.schemata WHERE SCHEMA_NAME = 'cities'"
      resiter: schema

    - name: print schema output
      ansible.builtin.debug:
        msg: "{{schema}}""
      

